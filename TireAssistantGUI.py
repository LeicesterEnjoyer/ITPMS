
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

window = Tk()

window.geometry("1199x739")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 739,
    width = 1199,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_text(
    481.0,
    31.0,
    anchor="nw",
    text="Tire Assistant",
    fill="#000000",
    font=("Inter SemiBold", 36 * -1)
)

canvas.create_text(
    482.0,
    492.0,
    anchor="nw",
    text="Rear Right Tire",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

canvas.create_text(
    70.0,
    492.0,
    anchor="nw",
    text="Rear Left Tire",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

canvas.create_text(
    478.0,
    167.0,
    anchor="nw",
    text="Front Right Tire",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

canvas.create_text(
    47.0,
    246.0,
    anchor="nw",
    text="Condition",
    fill="#000000",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    50.0,
    212.0,
    anchor="nw",
    text="Pressure",
    fill="#000000",
    font=("Inter", 20 * -1)
)
canvas.create_text(
    130.0,
    212.0,
    anchor="nw",
    text="*",
    fill="#FF0000",
    font=("Inter SemiBold", 20 * -1)
)

def setFLpressure(data: str):
    FLpressure.config(
        state="normal"
    )
    FLpressure.delete(0, 10)
    FLpressure.insert(
        index=0,
        string=data
    )
    FLpressure.config(
        state="readonly"
    )

def getFLpressure(args=""):
    return FLpressure.get()

FLpressure = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
FLpressure.place(
    x=156.0,
    y=212.0,
    width=35.0,
    height=22.0
)
FLpressure.insert(
    index=0,
    string="2.2"
)
FLpressure.bind(
    sequence="<Return>",
    func=getFLpressure
)

canvas.create_text(
    194.0,
    212.0,
    anchor="nw",
    text="bars",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    194.0,
    247.0,
    anchor="nw",
    text="%",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    69.0,
    167.0,
    anchor="nw",
    text="Front Left Tire",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

def setAvgDailyDriveTime(data):
    avgDailyDriveTime.config(
        state="normal"
    )
    avgDailyDriveTime.delete(0, 10)
    avgDailyDriveTime.insert(
        index=0,
        string=data
    )
    avgDailyDriveTime.config(
        state="readonly"
    )

def getAvgDailyDriveTime(args=""):
    return avgDailyDriveTime.get()

avgDailyDriveTime = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
avgDailyDriveTime.place(
    x=981.0,
    y=420.0,
    width=62.0,
    height=28.0
)
avgDailyDriveTime.config(
    state="readonly"
)
avgDailyDriveTime.bind(
    sequence="<Return>",
    func=getAvgDailyDriveTime
)

canvas.create_text(
    1050.0,
    420.0,
    anchor="nw",
    text="hours",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    719.0,
    420.0,
    anchor="nw",
    text="Avg Daily Drive Time",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

def setAvgDailyDistance(data):
    avgDailyDistance.config(
        state="normal"
    )
    avgDailyDistance.delete(0, 10)
    avgDailyDistance.insert(
        index=0,
        string=data
    )
    avgDailyDistance.config(
        state="readonly"
    )

def getAvgDailyDistance(args=""):
    return avgDailyDistance.get()

avgDailyDistance = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
avgDailyDistance.place(
    x=980.0,
    y=477.0,
    width=62.0,
    height=28.0
)
avgDailyDistance.config(
    state="readonly"
)
avgDailyDistance.bind(
    sequence="<Return>",
    func=getAvgDailyDistance
)

canvas.create_text(
    1049.0,
    477.0,
    anchor="nw",
    text="km",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    736.0,
    477.0,
    anchor="nw",
    text="Avg Daily Distance",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

def setAvgAmbientTemp(data):
    avgAmbientTemp.config(
        state="normal"
    )
    avgAmbientTemp.delete(0, 10)
    avgAmbientTemp.insert(
        index=0,
        string=data
    )
    avgAmbientTemp.config(
        state="readonly"
    )

def getAvgAmbientTemp(args=""):
    return avgAmbientTemp.get()

avgAmbientTemp = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
avgAmbientTemp.place(
    x=980.0,
    y=534.0,
    width=62.0,
    height=28.0
)
avgAmbientTemp.config(
    state="readonly"
)
avgAmbientTemp.bind(
    sequence="<Return>",
    func=getAvgAmbientTemp
)

canvas.create_text(
    1049.0,
    534.0,
    anchor="nw",
    text="â„ƒ",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    733.0,
    534.0,
    anchor="nw",
    text="Avg Ambient Temp",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

def setTimeStamp(data):
    timeStamp.config(
        state="normal"
    )
    timeStamp.delete(0, 10)
    timeStamp.insert(
        index=0,
        string=data
    )
    timeStamp.config(
        state="readonly"
    )

def getTimeStamp(args=""):
    return timeStamp.get()

timeStamp = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
timeStamp.place(
    x=981.0,
    y=363.0,
    width=62.0,
    height=28.0
)
timeStamp.config(
    state="readonly"
)
timeStamp.bind(
    sequence="<Return>",
    func=getTimeStamp
)

canvas.create_text(
    1050.0,
    363.0,
    anchor="nw",
    text="days",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    797.0,
    363.0,
    anchor="nw",
    text="Time Stamp",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

def getTiresSet(args=""):
    return tiresSet.get()

tiresSet = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
tiresSet.place(
    x=980.0,
    y=306.0,
    width=81.0,
    height=28.0
)
tiresSet.insert(
    index=0,
    string="summer"
)
tiresSet.bind(
    sequence="<Return>",
    func=getTiresSet
)

canvas.create_text(
    821.0,
    306.0,
    anchor="nw",
    text="Tires Set",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)
canvas.create_text(
    904.0,
    306.0,
    anchor="nw",
    text="*",
    fill="#FF0000",
    font=("Inter SemiBold", 20 * -1)
)

def getFilePath(args=""):
    return filePath.get()

filePath = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
filePath.place(
    x=731.0,
    y=215.0,
    width=374.0,
    height=28.0
)
filePath.bind(
    sequence="<Return>",
    func=getTiresSet
)

canvas.create_text(
    725.0,
    173.0,
    anchor="nw",
    text="Import File Path",
    fill="#000000",
    font=("Inter SemiBold", 20 * -1)
)

button_image = PhotoImage(
    file=relative_to_assets("button.png"))
button = Button(
    image=button_image,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("Button pressed!"),
    relief="flat"
)
button.place(
    x=400.0,
    y=649.0,
    width=400.0,
    height=40.0
)

canvas.create_rectangle(
    678.0,
    161.0,
    683.0,
    608.0,
    fill="#6F9DE3",
    outline="")

canvas.create_rectangle(
    720.0,
    256.0,
    1114.0,
    261.0,
    fill="#6F9DE3",
    outline="")

canvas.create_rectangle(
    53.0,
    521.0,
    211.0,
    526.0,
    fill="#6F9DE3",
    outline="")

canvas.create_rectangle(
    472.0,
    521.0,
    630.0,
    526.0,
    fill="#6F9DE3",
    outline="")

canvas.create_rectangle(
    53.0,
    196.0,
    211.0,
    201.0,
    fill="#6F9DE3",
    outline="")

canvas.create_rectangle(
    472.0,
    196.0,
    630.0,
    201.0,
    fill="#6F9DE3",
    outline="")

canvas.create_rectangle(
    112.99982595455367,
    114.99999980086241,
    1095.4306640625,
    120.92707061767578,
    fill="#6F9DE3",
    outline="")

def setFLcondition(data: str):
    FLcondition.config(
        state="normal"
    )
    FLcondition.delete(0, 10)
    FLcondition.insert(
        index=0,
        string=data
    )
    FLcondition.config(
        state="readonly"
    )

def getFLcondition(args=""):
    return FLcondition.get()

FLcondition = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
FLcondition.place(
    x=156.0,
    y=247.0,
    width=35.0,
    height=22.0
)
FLcondition.insert(
    index=0,
    string="100"
)
FLcondition.config(
    state="readonly"
)
FLcondition.bind(
    sequence="<Return>",
    func=getFLcondition
)

canvas.create_text(
    47.0,
    571.0,
    anchor="nw",
    text="Condition",
    fill="#000000",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    50.0,
    537.0,
    anchor="nw",
    text="Pressure",
    fill="#000000",
    font=("Inter", 20 * -1)
)
canvas.create_text(
    130.0,
    537.0,
    anchor="nw",
    text="*",
    fill="#FF0000",
    font=("Inter SemiBold", 20 * -1)
)

def setRLpressure(data: str):
    RLpressure.config(
        state="normal"
    )
    RLpressure.delete(0, 10)
    RLpressure.insert(
        index=0,
        string=data
    )
    RLpressure.config(
        state="readonly"
    )

def getRLpressure(args=""):
    return RLpressure.get()

RLpressure = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
RLpressure.place(
    x=156.0,
    y=537.0,
    width=35.0,
    height=22.0
)
RLpressure.insert(
    index=0,
    string="2.2"
)
RLpressure.bind(
    sequence="<Return>",
    func=getRLpressure
)

canvas.create_text(
    194.0,
    537.0,
    anchor="nw",
    text="bars",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    194.0,
    572.0,
    anchor="nw",
    text="%",
    fill="#454545",
    font=("Inter", 20 * -1)
)

def setRLcondition(data: str):
    RLcondition.config(
        state="normal"
    )
    RLcondition.delete(0, 10)
    RLcondition.insert(
        index=0,
        string=data
    )
    RLcondition.config(
        state="readonly"
    )

def getRLcondition(args=""):
    return RLcondition.get()

RLcondition = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
RLcondition.place(
    x=156.0,
    y=572.0,
    width=35.0,
    height=22.0
)
RLcondition.insert(
    index=0,
    string="100"
)
RLcondition.config(
    state="readonly"
)
RLcondition.bind(
    sequence="<Return>",
    func=getRLcondition
)

canvas.create_text(
    461.0,
    571.0,
    anchor="nw",
    text="Condition",
    fill="#000000",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    463.0,
    537.0,
    anchor="nw",
    text="Pressure",
    fill="#000000",
    font=("Inter", 20 * -1)
)
canvas.create_text(
    544.0,
    537.0,
    anchor="nw",
    text="*",
    fill="#FF0000",
    font=("Inter SemiBold", 20 * -1)
)

def setRRpressure(data: str):
    RRpressure.config(
        state="normal"
    )
    RRpressure.delete(0, 10)
    RRpressure.insert(
        index=0,
        string=data
    )
    RRpressure.config(
        state="readonly"
    )

def getRRpressure(args=""):
    return RRpressure.get()

RRpressure = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
RRpressure.place(
    x=569.0,
    y=537.0,
    width=35.0,
    height=22.0
)
RRpressure.insert(
    index=0,
    string="2.2"
)
RRpressure.bind(
    sequence="<Return>",
    func=getRRpressure
)

canvas.create_text(
    607.0,
    537.0,
    anchor="nw",
    text="bars",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    607.0,
    572.0,
    anchor="nw",
    text="%",
    fill="#454545",
    font=("Inter", 20 * -1)
)

def setRRcondition(data: str):
    RRcondition.config(
        state="normal"
    )
    RRcondition.delete(0, 10)
    RRcondition.insert(
        index=0,
        string=data
    )
    RRcondition.config(
        state="readonly"
    )

def getRRcondition(args=""):
    return RRcondition.get()

RRcondition = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
RRcondition.place(
    x=569.0,
    y=572.0,
    width=35.0,
    height=22.0
)
RRcondition.insert(
    index=0,
    string="100"
)
RRcondition.config(
    state="readonly"
)
RRcondition.bind(
    sequence="<Return>",
    func=getRRcondition
)

canvas.create_text(
    461.0,
    243.0,
    anchor="nw",
    text="Condition",
    fill="#000000",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    463.0,
    209.0,
    anchor="nw",
    text="Pressure",
    fill="#000000",
    font=("Inter", 20 * -1)
)
canvas.create_text(
    544.0,
    209.0,
    anchor="nw",
    text="*",
    fill="#FF0000",
    font=("Inter SemiBold", 20 * -1)
)

def setFRpressure(data: str):
    FRpressure.config(
        state="normal"
    )
    FRpressure.delete(0, 10)
    FRpressure.insert(
        index=0,
        string=data
    )
    FRpressure.config(
        state="readonly"
    )

def getFRpressure(args=""):
    return FRpressure.get()

FRpressure = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
FRpressure.place(
    x=569.0,
    y=209.0,
    width=35.0,
    height=22.0
)
FRpressure.insert(
    index=0,
    string="2.2"
)
FRpressure.bind(
    sequence="<Return>",
    func=getFRpressure
)

canvas.create_text(
    607.0,
    209.0,
    anchor="nw",
    text="bars",
    fill="#454545",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    607.0,
    244.0,
    anchor="nw",
    text="%",
    fill="#454545",
    font=("Inter", 20 * -1)
)

def setFRcondition(data: str):
    FRcondition.config(
        state="normal"
    )
    FRcondition.delete(0, 10)
    FRcondition.insert(
        index=0,
        string=data
    )
    FRcondition.config(
        state="readonly"
    )

def getFRcondition(args=""):
    return FRcondition.get()

FRcondition = Entry(
    bd=3,
    fg="#000716",
    highlightthickness=0
)
FRcondition.place(
    x=569.0,
    y=244.0,
    width=35.0,
    height=22.0
)
FRcondition.insert(
    index=0,
    string="100"
)
FRcondition.config(
    state="readonly"
)
FRcondition.bind(
    sequence="<Return>",
    func=getFRcondition
)

image_image = PhotoImage(
    file=relative_to_assets("image.png"))
image = canvas.create_image(
    344.0,
    371.0,
    image=image_image
)
window.resizable(False, False)
window.mainloop()